{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp; // Could have been `import { Select } from 'react-responsive-ui'`\n// but in that case Webpack bundles the whole `react-responsive-ui` package.\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Select = require('react-responsive-ui/commonjs/Select');\n\nvar _Select2 = _interopRequireDefault(_Select);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CountrySelectReactResponsiveUI = (_temp = _class = function (_Component) {\n  _inherits(CountrySelectReactResponsiveUI, _Component);\n\n  function CountrySelectReactResponsiveUI() {\n    _classCallCheck(this, CountrySelectReactResponsiveUI);\n\n    return _possibleConstructorReturn(this, (CountrySelectReactResponsiveUI.__proto__ || Object.getPrototypeOf(CountrySelectReactResponsiveUI)).apply(this, arguments));\n  }\n\n  _createClass(CountrySelectReactResponsiveUI, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          value = _props.value,\n          onChange = _props.onChange,\n          onFocus = _props.onFocus,\n          onBlur = _props.onBlur,\n          options = _props.options,\n          disabled = _props.disabled,\n          tabIndex = _props.tabIndex,\n          className = _props.className,\n          ariaLabel = _props.ariaLabel,\n          saveOnIcons = _props.saveOnIcons,\n          scrollMaxItems = _props.scrollMaxItems,\n          toggleClassName = _props.toggleClassName;\n      return _react2.default.createElement(_Select2.default, {\n        icon: true,\n        name: name,\n        value: value,\n        onChange: onChange,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        options: options,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        className: className,\n        'aria-label': this.props['aria-label'],\n        saveOnIcons: saveOnIcons,\n        scrollMaxItems: scrollMaxItems,\n        toggleClassName: toggleClassName\n      });\n    }\n  }]);\n\n  return CountrySelectReactResponsiveUI;\n}(_react.Component), _class.defaultProps = {\n  // If set to `false`, then country flags will be shown\n  // for all countries when country `<select/>` is expanded.\n  // By default shows flag only for currently selected country.\n  // (is `true` by default to save user's traffic\n  //  because all flags are about 3 MegaBytes)\n  saveOnIcons: true,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onFocus: _propTypes2.default.func,\n  // Toggles the `--focus` CSS class.\n  // https://github.com/catamphetamine/react-phone-number-input/issues/189\n  onBlur: _propTypes2.default.func\n}, _temp);\nexports.default = CountrySelectReactResponsiveUI;","map":null,"metadata":{},"sourceType":"script"}