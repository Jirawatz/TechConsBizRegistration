{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValidNumberForRegion;\n\nvar _isViablePhoneNumber = require('./isViablePhoneNumber');\n\nvar _isViablePhoneNumber2 = _interopRequireDefault(_isViablePhoneNumber);\n\nvar _parse_ = require('./parse_');\n\nvar _parse_2 = _interopRequireDefault(_parse_);\n\nvar _isValidNumberForRegion_ = require('./isValidNumberForRegion_');\n\nvar _isValidNumberForRegion_2 = _interopRequireDefault(_isValidNumberForRegion_);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction isValidNumberForRegion(number, country, metadata) {\n  if (typeof number !== 'string') {\n    throw new TypeError('number must be a string');\n  }\n\n  if (typeof country !== 'string') {\n    throw new TypeError('country must be a string');\n  } // `parse` extracts phone numbers from raw text,\n  // therefore it will cut off all \"garbage\" characters,\n  // while this `validate` function needs to verify\n  // that the phone number contains no \"garbage\"\n  // therefore the explicit `isViablePhoneNumber` check.\n\n\n  var input = void 0;\n\n  if ((0, _isViablePhoneNumber2.default)(number)) {\n    input = (0, _parse_2.default)(number, {\n      defaultCountry: country\n    }, metadata);\n  } else {\n    input = {};\n  }\n\n  return (0, _isValidNumberForRegion_2.default)(input, country, undefined, metadata);\n}","map":null,"metadata":{},"sourceType":"script"}